body{
    font-family: 'Raleway', sans-serif;
    font-weight: 300;
}
main{
    width:90%;    
    margin: 0 auto;
   
}
.container{
    background: #CCC;
    height:300px;
    width:100%;
    display:flex;
    
    /*===================== FLEX DIRECTION (determines the MAIN axis) ================= 
    https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction */

    /* MAIN axis is left to right. horizontal. this is the default*/
    /*flex-direction: row; */

    /* MAIN axis is right to left. horizontal. reverses the row*/
   /* flex-direction: row-reverse; */

    /* MAIN axis is top to bottom .vertical*/
   /* flex-direction:column; */

    /* MAIN axis is bottom to top. vertical*/
   /* flex-direction: column-reverse;*/

   /* =====================JUSTIFY CONTENT on MAIN AXIS(somewhat like text align. float left/right)
   https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
   */
   /* default*/
   /*
   justify-content: flex-start;
   justify-content: flex-end;   
   justify-content:space-between;
   justify-content:space-around;
   justify-content:space-evenly;*/
   justify-content: center;

   /* ===================== WRAP (somewhat like word wrap. it wraps the elements)
   https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
   */
   /*
   flex-wrap:wrap;
   flex-wrap: wrap-reverse
   */

   /* ==================== ALIGN ITEMS on CROSS axis ============== 
   https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Aligning_Items_in_a_Flex_Container
   */
   /*
     align-items: flex-start;
    align-items: flex-end;
    align-items: stretch
    align-items: baseline
   */
   align-items:center;

   /* ================== ALIGN CONTENT . Align content. use to control or distributes space along CROSS axis 
   but only if we have multiple rows or columns. It only works if we have flex-wrap ! 
   https://developer.mozilla.org/en-US/docs/Web/CSS/align-content
   =========
   
   align-content: start;
   align-content: center;
   align-content: space-between;
   align-content: space-around;
   */

  
}
.container div{
    width:150px;
    height:150px;
    font-size: 4em;
    color:#FFF;
    font-weight: 400;
    text-align:center;
    display:flex;
    justify-content: center;
    align-items: center;
}
.container div:nth-child(1){background-color: red;}
.container div:nth-child(2){background-color: orange;}
.container div:nth-child(3){background-color: yellow;}
.container div:nth-child(4){background-color: green;}
.container div:nth-child(5){background-color: indigo;}

 /* ALIGN SELF. somewhat like align-items but only applies to particular element
 https://developer.mozilla.org/en-US/docs/Web/CSS/align-self
 */
.container div:nth-of-type(2){/*align-self:end;*/}

/*
Flex basis. sets the initial main size of a flex item https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis
Flex grow. takes extra spaces of flex element
Flex shrink. it items are larger than the container, they shrink according to flex-shrink
*/
h1{
    font-weight: 400;
    font-size:2em;
    padding: .5em 0 .3em;
}

/*====================== DEMO FOR FLEX BASIS, GROW, SHRINK*/
.main-flex{
    width:80%;
    margin:0 auto;
    border:2px solid black;
    height: 500px;
    display:flex;
    margin-top:2rem;
}
.main-flex .sidebar{
    background:orange;
    flex: 1 2 300px; /* shorthand for flex-grow | flex-shrink | flex-basis*/
}
.main-flex .maincontent{
    background:green;
    flex: 2 1 800px; /* shorthand for flex-grow | flex-shrink | flex-basis*/
}